import{g as w}from"./attr-accept-CkmCM30I.js";import{r as y}from"./mimic-fn-kh_GziL3.js";import{r as I}from"./map-age-cleaner-B1I_vRRc.js";var c,l;function T(){if(l)return c;l=1;const d=y(),h=I(),s=new WeakMap,u=new WeakMap,i=(r,{cacheKey:e,cache:n=new Map,maxAge:t}={})=>{typeof t=="number"&&h(n);const o=function(...a){const f=e?e(a):a[0],m=n.get(f);if(m)return m.data;const p=r.apply(this,a);return n.set(f,{data:p,maxAge:t?Date.now()+t:Number.POSITIVE_INFINITY}),p};return d(o,r,{ignoreNonConfigurable:!0}),u.set(o,n),o};return i.decorator=(r={})=>(e,n,t)=>{const o=e[n];if(typeof o!="function")throw new TypeError("The decorated value must be a function");delete t.value,delete t.writable,t.get=function(){if(!s.has(this)){const a=i(o,r);return s.set(this,a),a}return s.get(this)}},i.clear=r=>{const e=u.get(r);if(!e)throw new TypeError("Can't clear a function that was not memoized!");if(typeof e.clear!="function")throw new TypeError("The cache Map can't be cleared!");e.clear()},c=i,c}var b=T();const M=w(b);export{M as m};
